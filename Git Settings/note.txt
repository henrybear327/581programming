git config --global core.editor "subl -n -w"


Change terminal built-in scheme to xTerm to make words clearer

=====================================================================

Instructor Notes

Downloading necessary files

Save this file in your home directory with the name git-completion.bash.
Save this file in your home directory with the name git-prompt.sh.
Save bash_profile_course from the Downloadables section in your home directory with the name .bash_profile. If you use Linux, you may need to name this file .bashrc instead of .bash_profile. (If you're curious to learn more about how bash prompts work, see this page.)
Make sure you can start your editor from the terminal

If you use Sublime, you can do this by add the following line to your .bash_profile (you may need to change the path if Sublime is installed in a different location for you):

alias subl="/Applications/Sublime\ Text\ 2.app/Contents/SharedSupport/bin/subl"
Making Git configurations

Run the following Git configuration commands. The first one will need to be modified if you are using a text editor other than Sublime, or if Sublime is installed in another location for you. See this page for the correct command for a couple of other popular text editors. For any other editor, you'll need to enter the command you use to launch that editor from the terminal.

git config --global core.editor "'/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl' -n -w"
git config --global push.default upstream
git config --global merge.conflictstyle diff3
(Instead of the first command, you may be able to use the simpler git config --global core.editor "subl -n -w" as shown in the video, but many students have found this does not work for them.)

Restart the terminal

You'll need to close and re-open the terminal before all your changes take effect.
